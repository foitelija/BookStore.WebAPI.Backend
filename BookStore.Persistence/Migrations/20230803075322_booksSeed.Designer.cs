// <auto-generated />
using System;
using BookStore.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BookStore.Persistence.Migrations
{
    [DbContext(typeof(BookStoreDbContext))]
    [Migration("20230803075322_booksSeed")]
    partial class booksSeed
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("BookStore.Domain.Books", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Author")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Genre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("Price")
                        .HasColumnType("float");

                    b.Property<int>("Rating")
                        .HasColumnType("int");

                    b.Property<int>("Stock")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TotalPages")
                        .HasColumnType("int");

                    b.Property<int?>("Year")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Books");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Author = "Author book name",
                            DateCreated = new DateTime(2023, 8, 3, 10, 53, 22, 691, DateTimeKind.Local).AddTicks(4704),
                            Description = "Full Description book",
                            Genre = "Genre test",
                            ImageUrl = "ImageUrl put here",
                            Price = 15.99,
                            Rating = 4,
                            Stock = 20,
                            Title = "Test book name",
                            TotalPages = 200,
                            Year = 2000
                        },
                        new
                        {
                            Id = 2,
                            Author = "Author 2 book 2 name 2",
                            DateCreated = new DateTime(2023, 8, 3, 10, 53, 22, 691, DateTimeKind.Local).AddTicks(4718),
                            Description = "Full 2 Description 2 book 2",
                            Genre = "Genre 2 test 2",
                            ImageUrl = "ImageUrl 2 put 2 here",
                            Price = 2.0,
                            Rating = 2,
                            Stock = 22,
                            Title = "Test 2 book 2 name 2",
                            TotalPages = 20,
                            Year = 2022
                        },
                        new
                        {
                            Id = 3,
                            Author = "Author 3 book 3 name",
                            DateCreated = new DateTime(2023, 8, 3, 10, 53, 22, 691, DateTimeKind.Local).AddTicks(4721),
                            Description = "Full 3 Description 3 book",
                            Genre = "Genre 3 test 3",
                            ImageUrl = "ImageUrl 3 put 3 here 3",
                            Price = 33.329999999999998,
                            Rating = 5,
                            Stock = 33,
                            Title = "Test 3 book 3 name",
                            TotalPages = 33,
                            Year = 2013
                        });
                });

            modelBuilder.Entity("BookStore.Domain.OrderedItems", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("BookId")
                        .HasColumnType("int");

                    b.Property<int>("OrderId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BookId");

                    b.HasIndex("OrderId");

                    b.ToTable("OrderedItems");
                });

            modelBuilder.Entity("BookStore.Domain.Orders", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CustomerName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DateCreated")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("BookStore.Domain.OrderedItems", b =>
                {
                    b.HasOne("BookStore.Domain.Books", "Book")
                        .WithMany()
                        .HasForeignKey("BookId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BookStore.Domain.Orders", "Order")
                        .WithMany()
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Book");

                    b.Navigation("Order");
                });
#pragma warning restore 612, 618
        }
    }
}
